-- Create the database
CREATE DATABASE project;

-- Use the created database
USE project;

-- Create the 'users' table
CREATE TABLE users (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone VARCHAR(15),
    password VARCHAR(255) NOT NULL,
    usertype ENUM('user', 'agency', 'admin') NOT NULL
);

-- Create the 'bookings' table (with correct foreign key reference)
CREATE TABLE bookings (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    destination VARCHAR(255) NOT NULL,
    from_date DATE NOT NULL,
    to_date DATE NOT NULL,
    days INT NOT NULL,
    user_id INT,  -- Use user_id instead of person_password
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create the 'packages' table
CREATE TABLE packages (
    pack_name VARCHAR(255) PRIMARY KEY,
    price DECIMAL(10, 2) NOT NULL,
    agency_id INT,
    CONSTRAINT fk_agency FOREIGN KEY (agency_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create the 'booking_packages' join table (correct table name reference)
CREATE TABLE booking_packages (
    booking_id INT,
    package_name VARCHAR(255),
    PRIMARY KEY (booking_id, package_name),
    CONSTRAINT fk_booking FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_package FOREIGN KEY (package_name) REFERENCES packages(pack_name) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create the 'payment' table (correct table name reference)
CREATE TABLE payment (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name_on_card VARCHAR(255) NOT NULL,
    card_num VARCHAR(16) NOT NULL,
    exp_month INT NOT NULL,
    exp_year INT NOT NULL,
    cvv INT NOT NULL,
    booking_id INT UNIQUE,  -- One-to-one relationship with 'bookings' table
    admin_id INT,  -- One-to-many relationship with 'users' (admin controls)
    CONSTRAINT fk_booking_payment FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_admin_payment FOREIGN KEY (admin_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);
